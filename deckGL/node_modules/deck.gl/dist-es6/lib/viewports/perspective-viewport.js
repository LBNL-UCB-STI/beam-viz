function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import Viewport from './viewport';
import { mat4 } from 'gl-matrix';

var DEGREES_TO_RADIANS = Math.PI / 180;

var PerspectiveViewport = function (_Viewport) {
  _inherits(PerspectiveViewport, _Viewport);

  function PerspectiveViewport(_ref) {
    var width = _ref.width,
        height = _ref.height,
        eye = _ref.eye,
        _ref$lookAt = _ref.lookAt,
        lookAt = _ref$lookAt === undefined ? [0, 0, 0] : _ref$lookAt,
        _ref$up = _ref.up,
        up = _ref$up === undefined ? [0, 1, 0] : _ref$up,
        _ref$fovy = _ref.fovy,
        fovy = _ref$fovy === undefined ? 75 : _ref$fovy,
        _ref$near = _ref.near,
        near = _ref$near === undefined ? 1 : _ref$near,
        _ref$far = _ref.far,
        far = _ref$far === undefined ? 100 : _ref$far,
        _ref$aspect = _ref.aspect,
        aspect = _ref$aspect === undefined ? null : _ref$aspect;

    _classCallCheck(this, PerspectiveViewport);

    var fovyRadians = fovy * DEGREES_TO_RADIANS;
    aspect = Number.isFinite(aspect) ? aspect : width / height;
    return _possibleConstructorReturn(this, (PerspectiveViewport.__proto__ || Object.getPrototypeOf(PerspectiveViewport)).call(this, {
      viewMatrix: mat4.lookAt([], eye, lookAt, up),
      projectionMatrix: mat4.perspective([], fovyRadians, aspect, near, far),
      width: width,
      height: height
    }));
  }

  return PerspectiveViewport;
}(Viewport);

export default PerspectiveViewport;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvdmlld3BvcnRzL3BlcnNwZWN0aXZlLXZpZXdwb3J0LmpzIl0sIm5hbWVzIjpbIlZpZXdwb3J0IiwibWF0NCIsIkRFR1JFRVNfVE9fUkFESUFOUyIsIk1hdGgiLCJQSSIsIlBlcnNwZWN0aXZlVmlld3BvcnQiLCJ3aWR0aCIsImhlaWdodCIsImV5ZSIsImxvb2tBdCIsInVwIiwiZm92eSIsIm5lYXIiLCJmYXIiLCJhc3BlY3QiLCJmb3Z5UmFkaWFucyIsIk51bWJlciIsImlzRmluaXRlIiwidmlld01hdHJpeCIsInByb2plY3Rpb25NYXRyaXgiLCJwZXJzcGVjdGl2ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBT0EsUUFBUCxNQUFxQixZQUFyQjtBQUNBLFNBQVFDLElBQVIsUUFBbUIsV0FBbkI7O0FBRUEsSUFBTUMscUJBQXFCQyxLQUFLQyxFQUFMLEdBQVUsR0FBckM7O0lBRXFCQyxtQjs7O0FBQ25CLHFDQWNHO0FBQUEsUUFaREMsS0FZQyxRQVpEQSxLQVlDO0FBQUEsUUFYREMsTUFXQyxRQVhEQSxNQVdDO0FBQUEsUUFUREMsR0FTQyxRQVREQSxHQVNDO0FBQUEsMkJBUkRDLE1BUUM7QUFBQSxRQVJEQSxNQVFDLCtCQVJRLENBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLENBUVI7QUFBQSx1QkFQREMsRUFPQztBQUFBLFFBUERBLEVBT0MsMkJBUEksQ0FBQyxDQUFELEVBQUksQ0FBSixFQUFPLENBQVAsQ0FPSjtBQUFBLHlCQUxEQyxJQUtDO0FBQUEsUUFMREEsSUFLQyw2QkFMTSxFQUtOO0FBQUEseUJBSkRDLElBSUM7QUFBQSxRQUpEQSxJQUlDLDZCQUpNLENBSU47QUFBQSx3QkFIREMsR0FHQztBQUFBLFFBSERBLEdBR0MsNEJBSEssR0FHTDtBQUFBLDJCQUREQyxNQUNDO0FBQUEsUUFEREEsTUFDQywrQkFEUSxJQUNSOztBQUFBOztBQUNELFFBQU1DLGNBQWNKLE9BQU9ULGtCQUEzQjtBQUNBWSxhQUFTRSxPQUFPQyxRQUFQLENBQWdCSCxNQUFoQixJQUEwQkEsTUFBMUIsR0FBbUNSLFFBQVFDLE1BQXBEO0FBRkMscUlBR0s7QUFDSlcsa0JBQVlqQixLQUFLUSxNQUFMLENBQVksRUFBWixFQUFnQkQsR0FBaEIsRUFBcUJDLE1BQXJCLEVBQTZCQyxFQUE3QixDQURSO0FBRUpTLHdCQUFrQmxCLEtBQUttQixXQUFMLENBQWlCLEVBQWpCLEVBQXFCTCxXQUFyQixFQUFrQ0QsTUFBbEMsRUFBMENGLElBQTFDLEVBQWdEQyxHQUFoRCxDQUZkO0FBR0pQLGtCQUhJO0FBSUpDO0FBSkksS0FITDtBQVNGOzs7RUF4QjhDUCxROztlQUE1QkssbUIiLCJmaWxlIjoicGVyc3BlY3RpdmUtdmlld3BvcnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmlld3BvcnQgZnJvbSAnLi92aWV3cG9ydCc7XG5pbXBvcnQge21hdDR9IGZyb20gJ2dsLW1hdHJpeCc7XG5cbmNvbnN0IERFR1JFRVNfVE9fUkFESUFOUyA9IE1hdGguUEkgLyAxODA7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBlcnNwZWN0aXZlVmlld3BvcnQgZXh0ZW5kcyBWaWV3cG9ydCB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICAvLyB2aWV3cG9ydCBhcmd1bWVudHNcbiAgICB3aWR0aCwgLy8gV2lkdGggb2Ygdmlld3BvcnRcbiAgICBoZWlnaHQsIC8vIEhlaWdodCBvZiB2aWV3cG9ydFxuICAgIC8vIHZpZXcgbWF0cml4IGFyZ3VtZW50c1xuICAgIGV5ZSwgLy8gRGVmaW5lcyBleWUgcG9zaXRpb25cbiAgICBsb29rQXQgPSBbMCwgMCwgMF0sIC8vIFdoaWNoIHBvaW50IGlzIGNhbWVyYSBsb29raW5nIGF0LCBkZWZhdWx0IG9yaWdpblxuICAgIHVwID0gWzAsIDEsIDBdLCAvLyBEZWZpbmVzIHVwIGRpcmVjdGlvbiwgZGVmYXVsdCBwb3NpdGl2ZSB5IGF4aXNcbiAgICAvLyBwcm9qZWN0aW9uIG1hdHJpeCBhcmd1bWVudHNcbiAgICBmb3Z5ID0gNzUsIC8vIEZpZWxkIG9mIHZpZXcgY292ZXJlZCBieSBjYW1lcmFcbiAgICBuZWFyID0gMSwgLy8gRGlzdGFuY2Ugb2YgbmVhciBjbGlwcGluZyBwbGFuZVxuICAgIGZhciA9IDEwMCwgLy8gRGlzdGFuY2Ugb2YgZmFyIGNsaXBwaW5nIHBsYW5lXG4gICAgLy8gYXV0b21hdGljYWxseSBjYWxjdWxhdGVkXG4gICAgYXNwZWN0ID0gbnVsbCAvLyBBc3BlY3QgcmF0aW8gKHNldCB0byB2aWV3cG9ydCB3aWRodC9oZWlnaHQpXG4gIH0pIHtcbiAgICBjb25zdCBmb3Z5UmFkaWFucyA9IGZvdnkgKiBERUdSRUVTX1RPX1JBRElBTlM7XG4gICAgYXNwZWN0ID0gTnVtYmVyLmlzRmluaXRlKGFzcGVjdCkgPyBhc3BlY3QgOiB3aWR0aCAvIGhlaWdodDtcbiAgICBzdXBlcih7XG4gICAgICB2aWV3TWF0cml4OiBtYXQ0Lmxvb2tBdChbXSwgZXllLCBsb29rQXQsIHVwKSxcbiAgICAgIHByb2plY3Rpb25NYXRyaXg6IG1hdDQucGVyc3BlY3RpdmUoW10sIGZvdnlSYWRpYW5zLCBhc3BlY3QsIG5lYXIsIGZhciksXG4gICAgICB3aWR0aCxcbiAgICAgIGhlaWdodFxuICAgIH0pO1xuICB9XG59XG4iXX0=