'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _core = require('../core');

var _geometry = require('../geometry');

var _utils = require('../utils');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Sphere = function (_Model) {
  _inherits(Sphere, _Model);

  function Sphere() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Sphere);

    var _opts$id = opts.id,
        id = _opts$id === undefined ? (0, _utils.uid)('sphere') : _opts$id;
    return _possibleConstructorReturn(this, (Sphere.__proto__ || Object.getPrototypeOf(Sphere)).call(this, Object.assign({}, opts, { id: id, geometry: new _geometry.SphereGeometry(opts) })));
  }

  return Sphere;
}(_core.Model);

exports.default = Sphere;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvc3BoZXJlLmpzIl0sIm5hbWVzIjpbIlNwaGVyZSIsIm9wdHMiLCJpZCIsIk9iamVjdCIsImFzc2lnbiIsImdlb21ldHJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0lBRXFCQSxNOzs7QUFDbkIsb0JBQXVCO0FBQUEsUUFBWEMsSUFBVyx1RUFBSixFQUFJOztBQUFBOztBQUFBLG1CQUNRQSxJQURSLENBQ2RDLEVBRGM7QUFBQSxRQUNkQSxFQURjLDRCQUNULGdCQUFJLFFBQUosQ0FEUztBQUFBLDJHQUVmQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQkgsSUFBbEIsRUFBd0IsRUFBQ0MsTUFBRCxFQUFLRyxVQUFVLDZCQUFtQkosSUFBbkIsQ0FBZixFQUF4QixDQUZlO0FBR3RCOzs7OztrQkFKa0JELE0iLCJmaWxlIjoic3BoZXJlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtNb2RlbH0gZnJvbSAnLi4vY29yZSc7XG5pbXBvcnQge1NwaGVyZUdlb21ldHJ5fSBmcm9tICcuLi9nZW9tZXRyeSc7XG5pbXBvcnQge3VpZH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTcGhlcmUgZXh0ZW5kcyBNb2RlbCB7XG4gIGNvbnN0cnVjdG9yKG9wdHMgPSB7fSkge1xuICAgIGNvbnN0IHtpZCA9IHVpZCgnc3BoZXJlJyl9ID0gb3B0cztcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKHt9LCBvcHRzLCB7aWQsIGdlb21ldHJ5OiBuZXcgU3BoZXJlR2VvbWV0cnkob3B0cyl9KSk7XG4gIH1cbn1cbiJdfQ==