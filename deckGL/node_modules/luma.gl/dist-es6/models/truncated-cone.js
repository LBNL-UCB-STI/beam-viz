function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import { TruncatedConeGeometry } from '../geometry';
import { Model } from '../core';

var TruncatedCone = function (_Model) {
  _inherits(TruncatedCone, _Model);

  function TruncatedCone() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, TruncatedCone);

    return _possibleConstructorReturn(this, (TruncatedCone.__proto__ || Object.getPrototypeOf(TruncatedCone)).call(this, Object.assign({}, opts, { geometry: new TruncatedConeGeometry(opts) })));
  }

  return TruncatedCone;
}(Model);

export { TruncatedCone as default };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbHMvdHJ1bmNhdGVkLWNvbmUuanMiXSwibmFtZXMiOlsiVHJ1bmNhdGVkQ29uZUdlb21ldHJ5IiwiTW9kZWwiLCJUcnVuY2F0ZWRDb25lIiwib3B0cyIsIk9iamVjdCIsImFzc2lnbiIsImdlb21ldHJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxTQUFRQSxxQkFBUixRQUFvQyxhQUFwQztBQUNBLFNBQVFDLEtBQVIsUUFBb0IsU0FBcEI7O0lBRXFCQyxhOzs7QUFDbkIsMkJBQXVCO0FBQUEsUUFBWEMsSUFBVyx1RUFBSixFQUFJOztBQUFBOztBQUFBLHlIQUNmQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQkYsSUFBbEIsRUFBd0IsRUFBQ0csVUFBVSxJQUFJTixxQkFBSixDQUEwQkcsSUFBMUIsQ0FBWCxFQUF4QixDQURlO0FBRXRCOzs7RUFId0NGLEs7O1NBQXRCQyxhIiwiZmlsZSI6InRydW5jYXRlZC1jb25lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUcnVuY2F0ZWRDb25lR2VvbWV0cnl9IGZyb20gJy4uL2dlb21ldHJ5JztcbmltcG9ydCB7TW9kZWx9IGZyb20gJy4uL2NvcmUnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcnVuY2F0ZWRDb25lIGV4dGVuZHMgTW9kZWwge1xuICBjb25zdHJ1Y3RvcihvcHRzID0ge30pIHtcbiAgICBzdXBlcihPYmplY3QuYXNzaWduKHt9LCBvcHRzLCB7Z2VvbWV0cnk6IG5ldyBUcnVuY2F0ZWRDb25lR2VvbWV0cnkob3B0cyl9KSk7XG4gIH1cbn1cbiJdfQ==