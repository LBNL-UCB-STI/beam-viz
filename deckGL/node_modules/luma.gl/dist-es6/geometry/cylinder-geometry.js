function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import TruncatedConeGeometry from './truncated-cone-geometry';

var CylinderGeometry = function (_TruncatedConeGeometr) {
  _inherits(CylinderGeometry, _TruncatedConeGeometr);

  function CylinderGeometry() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, CylinderGeometry);

    var _opts$radius = opts.radius,
        radius = _opts$radius === undefined ? 1 : _opts$radius;
    return _possibleConstructorReturn(this, (CylinderGeometry.__proto__ || Object.getPrototypeOf(CylinderGeometry)).call(this, Object.assign({}, opts, {
      bottomRadius: radius,
      topRadius: radius
    })));
  }

  return CylinderGeometry;
}(TruncatedConeGeometry);

export { CylinderGeometry as default };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZW9tZXRyeS9jeWxpbmRlci1nZW9tZXRyeS5qcyJdLCJuYW1lcyI6WyJUcnVuY2F0ZWRDb25lR2VvbWV0cnkiLCJDeWxpbmRlckdlb21ldHJ5Iiwib3B0cyIsInJhZGl1cyIsIk9iamVjdCIsImFzc2lnbiIsImJvdHRvbVJhZGl1cyIsInRvcFJhZGl1cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBT0EscUJBQVAsTUFBa0MsMkJBQWxDOztJQUVxQkMsZ0I7OztBQUNuQiw4QkFBdUI7QUFBQSxRQUFYQyxJQUFXLHVFQUFKLEVBQUk7O0FBQUE7O0FBQUEsdUJBQ0FBLElBREEsQ0FDZEMsTUFEYztBQUFBLFFBQ2RBLE1BRGMsZ0NBQ0wsQ0FESztBQUFBLCtIQUVmQyxPQUFPQyxNQUFQLENBQWMsRUFBZCxFQUFrQkgsSUFBbEIsRUFBd0I7QUFDNUJJLG9CQUFjSCxNQURjO0FBRTVCSSxpQkFBV0o7QUFGaUIsS0FBeEIsQ0FGZTtBQU10Qjs7O0VBUDJDSCxxQjs7U0FBekJDLGdCIiwiZmlsZSI6ImN5bGluZGVyLWdlb21ldHJ5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRydW5jYXRlZENvbmVHZW9tZXRyeSBmcm9tICcuL3RydW5jYXRlZC1jb25lLWdlb21ldHJ5JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ3lsaW5kZXJHZW9tZXRyeSBleHRlbmRzIFRydW5jYXRlZENvbmVHZW9tZXRyeSB7XG4gIGNvbnN0cnVjdG9yKG9wdHMgPSB7fSkge1xuICAgIGNvbnN0IHtyYWRpdXMgPSAxfSA9IG9wdHM7XG4gICAgc3VwZXIoT2JqZWN0LmFzc2lnbih7fSwgb3B0cywge1xuICAgICAgYm90dG9tUmFkaXVzOiByYWRpdXMsXG4gICAgICB0b3BSYWRpdXM6IHJhZGl1c1xuICAgIH0pKTtcbiAgfVxufVxuIl19